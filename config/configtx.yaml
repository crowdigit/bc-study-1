# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
Organizations:

    - &FooOrg
        Name: FooOrg
        ID: FooOrg
        MSPDir: ../crypto/ordererOrganizations/foo.org/msp
        Policies: &FooOrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('FooOrg.member')"
            Writers:
                Type: Signature
                Rule: "OR('FooOrg.member')"
            Admins:
                Type: Signature
                Rule: "OR('FooOrg.admin')"

        OrdererEndpoints:
            - "o0.foo.org:7050"
            - "o1.foo.org:7050"

    - &ABCOrg
        Name: ABCOrg
        ID: ABCOrg
        MSPDir: ../crypto/peerOrganizations/abc.com/msp
        Policies: &ABCOrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('ABCOrg.member')"
            Writers:
                Type: Signature
                Rule: "OR('ABCOrg.member')"
            Admins:
                Type: Signature
                Rule: "OR('ABCOrg.admin')"

        AnchorPeers:
            - Host: p0.abc.com
              Port: 7051

    - &XYZOrg
        Name: XYZOrg
        ID: XYZOrg
        MSPDir: ../crypto/peerOrganizations/xyz.com/msp
        Policies: &XYZOrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('XYZOrg.member')"
            Writers:
                Type: Signature
                Rule: "OR('XYZOrg.member')"
            Admins:
                Type: Signature
                Rule: "OR('XYZOrg.admin')"

        AnchorPeers:
            - Host: p0.xyz.com
              Port: 7051

    - &IJKOrg
        Name: IJKOrg
        ID: IJKOrg
        MSPDir: ../crypto/peerOrganizations/ijk.com/msp
        Policies: &IJKOrgPolicies
            Readers:
                Type: Signature
                Rule: "OR('IJKOrg.member')"
            Writers:
                Type: Signature
                Rule: "OR('IJKOrg.member')"
            Admins:
                Type: Signature
                Rule: "OR('IJKOrg.admin')"

        AnchorPeers:
            - Host: p0.ijk.com
              Port: 7051

Capabilities:
    Channel: &ChannelCapabilities
        V1_4_3: true
        V1_3: false
        V1_1: false

    Orderer: &OrdererCapabilities
        V1_4_2: true
        V1_1: false

    Application: &ApplicationCapabilities
        V1_4_2: true
        V1_3: false
        V1_2: false
        V1_1: false

Application: &ApplicationDefaults
    ACLs: &ACLsDefault
        #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#

        # ACL policy for lscc's "getid" function
        lscc/ChaincodeExists: /Channel/Application/Readers

        # ACL policy for lscc's "getdepspec" function
        lscc/GetDeploymentSpec: /Channel/Application/Readers

        # ACL policy for lscc's "getccdata" function
        lscc/GetChaincodeData: /Channel/Application/Readers

        # ACL Policy for lscc's "getchaincodes" function
        lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

        #---Query System Chaincode (qscc) function to policy mapping for access control---#

        # ACL policy for qscc's "GetChainInfo" function
        qscc/GetChainInfo: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByNumber" function
        qscc/GetBlockByNumber: /Channel/Application/Readers

        # ACL policy for qscc's  "GetBlockByHash" function
        qscc/GetBlockByHash: /Channel/Application/Readers

        # ACL policy for qscc's "GetTransactionByID" function
        qscc/GetTransactionByID: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByTxID" function
        qscc/GetBlockByTxID: /Channel/Application/Readers

        #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

        # ACL policy for cscc's "GetConfigBlock" function
        cscc/GetConfigBlock: /Channel/Application/Readers

        # ACL policy for cscc's "GetConfigTree" function
        cscc/GetConfigTree: /Channel/Application/Readers

        # ACL policy for cscc's "SimulateConfigTreeUpdate" function
        cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

        #---Miscellanesous peer function to policy mapping for access control---#

        # ACL policy for invoking chaincodes on peer
        peer/Propose: /Channel/Application/Writers

        # ACL policy for chaincode to chaincode invocation
        peer/ChaincodeToChaincode: /Channel/Application/Readers

        #---Events resource to policy mapping for access control###---#

        # ACL policy for sending block events
        event/Block: /Channel/Application/Readers

        # ACL policy for sending filtered block events
        event/FilteredBlock: /Channel/Application/Readers

    Organizations:

    Policies: &ApplicationDefaultPolicies
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ApplicationCapabilities

Orderer: &OrdererDefaults

    OrdererType: kafka
    Addresses:
        - o0.foo.org:7050
        - o1.foo.org:7050

    BatchTimeout: 2s
    BatchSize:
        MaxMessageCount: 30

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch. The maximum block size is this value
        # plus the size of the associated metadata (usually a few KB depending
        # upon the size of the signing identities). Any transaction larger than
        # this value will be rejected by ordering. If the "kafka" OrdererType is
        # selected, set 'message.max.bytes' and 'replica.fetch.max.bytes' on
        # the Kafka brokers to a value that is larger than this one.
        AbsoluteMaxBytes: 10 MB
        PreferredMaxBytes: 2 MB

    MaxChannels: 0

    Kafka:
        Brokers:
            - k0.foo.org:9092
            - k1.foo.org:9092
            - k2.foo.org:9092
            - k3.foo.org:9092

    # EtcdRaft defines configuration which must be set when the "etcdraft"
    # orderertype is chosen.
    EtcdRaft:
        # The set of Raft replicas for this network. For the etcd/raft-based
        # implementation, we expect every replica to also be an OSN. Therefore,
        # a subset of the host:port items enumerated in this list should be
        # replicated under the Orderer.Addresses key above.
        Consenters:
            - Host: raft0.example.com
              Port: 7050
              ClientTLSCert: path/to/ClientTLSCert0
              ServerTLSCert: path/to/ServerTLSCert0
            - Host: raft1.example.com
              Port: 7050
              ClientTLSCert: path/to/ClientTLSCert1
              ServerTLSCert: path/to/ServerTLSCert1
            - Host: raft2.example.com
              Port: 7050
              ClientTLSCert: path/to/ClientTLSCert2
              ServerTLSCert: path/to/ServerTLSCert2

        # Options to be specified for all the etcd/raft nodes. The values here
        # are the defaults for all new channels and can be modified on a
        # per-channel basis via configuration updates.
        Options:
            # TickInterval is the time interval between two Node.Tick invocations.
            TickInterval: 500ms

            # ElectionTick is the number of Node.Tick invocations that must pass
            # between elections. That is, if a follower does not receive any
            # message from the leader of current term before ElectionTick has
            # elapsed, it will become candidate and start an election.
            # ElectionTick must be greater than HeartbeatTick.
            ElectionTick: 10

            # HeartbeatTick is the number of Node.Tick invocations that must
            # pass between heartbeats. That is, a leader sends heartbeat
            # messages to maintain its leadership every HeartbeatTick ticks.
            HeartbeatTick: 1

            # MaxInflightBlocks limits the max number of in-flight append messages
            # during optimistic replication phase.
            MaxInflightBlocks: 5

            # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
            SnapshotIntervalSize: 20 MB

    # Organizations lists the orgs participating on the orderer side of the
    # network.
    Organizations:

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

    Capabilities:
        <<: *OrdererCapabilities

Channel: &ChannelDefaults
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"


    Capabilities:
        <<: *ChannelCapabilities

Profiles:
    LectureSystemChannel:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *FooOrg
        Consortiums:
            LectureConsortium:
                Organizations:
                    - *ABCOrg
                    - *XYZOrg
                    - *IJKOrg

    LectureApplicationChannel:
        <<: *ChannelDefaults
        Consortium: LectureConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *ABCOrg
                - *XYZOrg
                - *IJKOrg
